/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.xtreemfs.common.libxtreemfs.jni.generated;

public class VolumeProxy {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected VolumeProxy(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(VolumeProxy obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        xtreemfs_jniJNI.delete_VolumeProxy(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  private OptionsProxy optionsReference;
  private SSLOptionsProxy sslOptionsReference;
  protected void addReferences(OptionsProxy options, SSLOptionsProxy sslOptions) {
    optionsReference = options;
    sslOptionsReference = sslOptions;
  }

  public void close() {
    xtreemfs_jniJNI.VolumeProxy_close(swigCPtr, this);
  }

  public org.xtreemfs.pbrpc.generatedinterfaces.MRC.StatVFS statFS(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
  byte[] buf = xtreemfs_jniJNI.VolumeProxy_statFS(swigCPtr, this, user_credentials.toByteArray());

  // It is possible that a serialized protobuf message has a length of 0, for 
  // example if it consists only of repeated fields of which none has an entry.
  // In that case it is preferred to parse the (empty) message and return it
  // instead of null. Null is only valid if the native call did return null.
  if (buf == null) {
    return null;
  }

  try {
    return org.xtreemfs.pbrpc.generatedinterfaces.MRC.StatVFS.parseFrom(buf);
  } catch (com.google.protobuf.InvalidProtocolBufferException e) {
    throw new RuntimeException(
        "Unable to parse org.xtreemfs.pbrpc.generatedinterfaces.MRC.StatVFS protocol message.");
  }
}

  public void readLink(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, String[] link_target_path) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_readLink(swigCPtr, this, user_credentials.toByteArray(), path, link_target_path);
  }

  public void symlink(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String target_path, String link_path) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_symlink(swigCPtr, this, user_credentials.toByteArray(), target_path, link_path);
  }

  public void link(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String target_path, String link_path) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_link(swigCPtr, this, user_credentials.toByteArray(), target_path, link_path);
  }

  public void access(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, int flags) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_access(swigCPtr, this, user_credentials.toByteArray(), path, flags);
  }

  public FileHandleProxy openFileProxy(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, int flags) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    long cPtr = xtreemfs_jniJNI.VolumeProxy_openFileProxy__SWIG_0(swigCPtr, this, user_credentials.toByteArray(), path, flags);
    return (cPtr == 0) ? null : new FileHandleProxy(cPtr, false);
  }

  public FileHandleProxy openFileProxy(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, int flags, long mode) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    long cPtr = xtreemfs_jniJNI.VolumeProxy_openFileProxy__SWIG_1(swigCPtr, this, user_credentials.toByteArray(), path, flags, mode);
    return (cPtr == 0) ? null : new FileHandleProxy(cPtr, false);
  }

  public FileHandleProxy openFileProxy(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, int flags, long mode, long attributes) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    long cPtr = xtreemfs_jniJNI.VolumeProxy_openFileProxy__SWIG_2(swigCPtr, this, user_credentials.toByteArray(), path, flags, mode, attributes);
    return (cPtr == 0) ? null : new FileHandleProxy(cPtr, false);
  }

  public void truncate(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, int new_file_size) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_truncate(swigCPtr, this, user_credentials.toByteArray(), path, new_file_size);
  }

  public org.xtreemfs.pbrpc.generatedinterfaces.MRC.Stat getAttr(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
  byte[] buf = xtreemfs_jniJNI.VolumeProxy_getAttr__SWIG_0(swigCPtr, this, user_credentials.toByteArray(), path);

  // It is possible that a serialized protobuf message has a length of 0, for 
  // example if it consists only of repeated fields of which none has an entry.
  // In that case it is preferred to parse the (empty) message and return it
  // instead of null. Null is only valid if the native call did return null.
  if (buf == null) {
    return null;
  }
  try {
    return org.xtreemfs.pbrpc.generatedinterfaces.MRC.Stat.parseFrom(buf);
  } catch (com.google.protobuf.InvalidProtocolBufferException e) {
    throw new RuntimeException(
        "Unable to parse org.xtreemfs.pbrpc.generatedinterfaces.MRC.Stat protocol message.");
  }
}

  public org.xtreemfs.pbrpc.generatedinterfaces.MRC.Stat getAttr(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, boolean ignore_metadata_cache) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
  byte[] buf = xtreemfs_jniJNI.VolumeProxy_getAttr__SWIG_1(swigCPtr, this, user_credentials.toByteArray(), path, ignore_metadata_cache);

  // It is possible that a serialized protobuf message has a length of 0, for 
  // example if it consists only of repeated fields of which none has an entry.
  // In that case it is preferred to parse the (empty) message and return it
  // instead of null. Null is only valid if the native call did return null.
  if (buf == null) {
    return null;
  }
  try {
    return org.xtreemfs.pbrpc.generatedinterfaces.MRC.Stat.parseFrom(buf);
  } catch (com.google.protobuf.InvalidProtocolBufferException e) {
    throw new RuntimeException(
        "Unable to parse org.xtreemfs.pbrpc.generatedinterfaces.MRC.Stat protocol message.");
  }
}

  public void setAttr(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, org.xtreemfs.pbrpc.generatedinterfaces.MRC.Stat stat, int to_set) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_setAttr(swigCPtr, this, user_credentials.toByteArray(), path, stat.toByteArray(), to_set);
  }

  public void unlink(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_unlink(swigCPtr, this, user_credentials.toByteArray(), path);
  }

  public void rename(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, String new_path) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_rename(swigCPtr, this, user_credentials.toByteArray(), path, new_path);
  }

  public void makeDirectory(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, long mode) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_makeDirectory(swigCPtr, this, user_credentials.toByteArray(), path, mode);
  }

  public void deleteDirectory(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_deleteDirectory(swigCPtr, this, user_credentials.toByteArray(), path);
  }

  public org.xtreemfs.pbrpc.generatedinterfaces.MRC.DirectoryEntries readDir(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, long offset, long count, boolean names_only) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
  byte[] buf = xtreemfs_jniJNI.VolumeProxy_readDir(swigCPtr, this, user_credentials.toByteArray(), path, offset, count, names_only);

  // It is possible that a serialized protobuf message has a length of 0, for 
  // example if it consists only of repeated fields of which none has an entry.
  // In that case it is preferred to parse the (empty) message and return it
  // instead of null. Null is only valid if the native call did return null.
  if (buf == null) {
    return null;
  }

  try {
    return org.xtreemfs.pbrpc.generatedinterfaces.MRC.DirectoryEntries.parseFrom(buf);
  } catch (com.google.protobuf.InvalidProtocolBufferException e) {
    throw new RuntimeException(
        "Unable to parse org.xtreemfs.pbrpc.generatedinterfaces.MRC.DirectoryEntries protocol message.");
  }
}

  public org.xtreemfs.pbrpc.generatedinterfaces.MRC.listxattrResponse listXAttrs(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
  byte[] buf = xtreemfs_jniJNI.VolumeProxy_listXAttrs__SWIG_0(swigCPtr, this, user_credentials.toByteArray(), path);

  // It is possible that a serialized protobuf message has a length of 0, for 
  // example if it consists only of repeated fields of which none has an entry.
  // In that case it is preferred to parse the (empty) message and return it
  // instead of null. Null is only valid if the native call did return null.
  if (buf == null) {
    return null;
  }

  try {
    return org.xtreemfs.pbrpc.generatedinterfaces.MRC.listxattrResponse.parseFrom(buf);
  } catch (com.google.protobuf.InvalidProtocolBufferException e) {
    throw new RuntimeException(
        "Unable to parse org.xtreemfs.pbrpc.generatedinterfaces.MRC.listxattrResponse protocol message.");
  }
}

  public org.xtreemfs.pbrpc.generatedinterfaces.MRC.listxattrResponse listXAttrs(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, boolean use_cache) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
  byte[] buf = xtreemfs_jniJNI.VolumeProxy_listXAttrs__SWIG_1(swigCPtr, this, user_credentials.toByteArray(), path, use_cache);

  // It is possible that a serialized protobuf message has a length of 0, for 
  // example if it consists only of repeated fields of which none has an entry.
  // In that case it is preferred to parse the (empty) message and return it
  // instead of null. Null is only valid if the native call did return null.
  if (buf == null) {
    return null;
  }

  try {
    return org.xtreemfs.pbrpc.generatedinterfaces.MRC.listxattrResponse.parseFrom(buf);
  } catch (com.google.protobuf.InvalidProtocolBufferException e) {
    throw new RuntimeException(
        "Unable to parse org.xtreemfs.pbrpc.generatedinterfaces.MRC.listxattrResponse protocol message.");
  }
}

  public void setXAttr(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, String name, String value, org.xtreemfs.pbrpc.generatedinterfaces.MRC.XATTR_FLAGS flags) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_setXAttr(swigCPtr, this, user_credentials.toByteArray(), path, name, value, flags.getNumber());
  }

  public boolean getXAttr(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, String name, String[] value) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    return xtreemfs_jniJNI.VolumeProxy_getXAttr(swigCPtr, this, user_credentials.toByteArray(), path, name, value);
  }

  public boolean getXAttrSize(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, String name, int[] size) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    return xtreemfs_jniJNI.VolumeProxy_getXAttrSize(swigCPtr, this, user_credentials.toByteArray(), path, name, size);
  }

  public void removeXAttr(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, String name) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_removeXAttr(swigCPtr, this, user_credentials.toByteArray(), path, name);
  }

  public void addReplica(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, org.xtreemfs.pbrpc.generatedinterfaces.GlobalTypes.Replica new_replica) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_addReplica(swigCPtr, this, user_credentials.toByteArray(), path, new_replica.toByteArray());
  }

  public org.xtreemfs.pbrpc.generatedinterfaces.GlobalTypes.Replicas listReplicas(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
  byte[] buf = xtreemfs_jniJNI.VolumeProxy_listReplicas(swigCPtr, this, user_credentials.toByteArray(), path);

  // It is possible that a serialized protobuf message has a length of 0, for 
  // example if it consists only of repeated fields of which none has an entry.
  // In that case it is preferred to parse the (empty) message and return it
  // instead of null. Null is only valid if the native call did return null.
  if (buf == null) {
    return null;
  }

  try {
    return org.xtreemfs.pbrpc.generatedinterfaces.GlobalTypes.Replicas.parseFrom(buf);
  } catch (com.google.protobuf.InvalidProtocolBufferException e) {
    throw new RuntimeException(
        "Unable to parse org.xtreemfs.pbrpc.generatedinterfaces.GlobalTypes.Replicas protocol message.");
  }
}

  public void removeReplica(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, String osd_uuid) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_removeReplica(swigCPtr, this, user_credentials.toByteArray(), path, osd_uuid);
  }

  public void getSuitableOSDs(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, int number_of_osds, StringList list_of_osd_uuids) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_getSuitableOSDs(swigCPtr, this, user_credentials.toByteArray(), path, number_of_osds, StringList.getCPtr(list_of_osd_uuids), list_of_osd_uuids);
  }

  public void setReplicaUpdatePolicy(org.xtreemfs.foundation.pbrpc.generatedinterfaces.RPC.UserCredentials user_credentials, String path, String policy) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException {
    xtreemfs_jniJNI.VolumeProxy_setReplicaUpdatePolicy(swigCPtr, this, user_credentials.toByteArray(), path, policy);
  }

}
