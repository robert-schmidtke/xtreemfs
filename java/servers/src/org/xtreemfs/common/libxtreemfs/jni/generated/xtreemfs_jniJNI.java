/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.xtreemfs.common.libxtreemfs.jni.generated;

public class xtreemfs_jniJNI {
  public final static native long new_StringVector__SWIG_0();
  public final static native long new_StringVector__SWIG_1(long jarg1);
  public final static native long StringVector_size(long jarg1, StringVector jarg1_);
  public final static native long StringVector_capacity(long jarg1, StringVector jarg1_);
  public final static native void StringVector_reserve(long jarg1, StringVector jarg1_, long jarg2);
  public final static native boolean StringVector_isEmpty(long jarg1, StringVector jarg1_);
  public final static native void StringVector_clear(long jarg1, StringVector jarg1_);
  public final static native void StringVector_add(long jarg1, StringVector jarg1_, String jarg2);
  public final static native String StringVector_get(long jarg1, StringVector jarg1_, int jarg2);
  public final static native void StringVector_set(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native void delete_StringVector(long jarg1);
  public final static native long new_IntVector__SWIG_0();
  public final static native long new_IntVector__SWIG_1(long jarg1);
  public final static native long IntVector_size(long jarg1, IntVector jarg1_);
  public final static native long IntVector_capacity(long jarg1, IntVector jarg1_);
  public final static native void IntVector_reserve(long jarg1, IntVector jarg1_, long jarg2);
  public final static native boolean IntVector_isEmpty(long jarg1, IntVector jarg1_);
  public final static native void IntVector_clear(long jarg1, IntVector jarg1_);
  public final static native void IntVector_add(long jarg1, IntVector jarg1_, int jarg2);
  public final static native int IntVector_get(long jarg1, IntVector jarg1_, int jarg2);
  public final static native void IntVector_set(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntVector(long jarg1);
  public final static native long new_StringList__SWIG_0();
  public final static native long new_StringList__SWIG_1(long jarg1);
  public final static native long StringList_size(long jarg1, StringList jarg1_);
  public final static native boolean StringList_isEmpty(long jarg1, StringList jarg1_);
  public final static native void StringList_clear(long jarg1, StringList jarg1_);
  public final static native void StringList_reverse(long jarg1, StringList jarg1_);
  public final static native void StringList_addFirst(long jarg1, StringList jarg1_, String jarg2);
  public final static native void StringList_addLast(long jarg1, StringList jarg1_, String jarg2);
  public final static native String StringList_getFirst(long jarg1, StringList jarg1_);
  public final static native String StringList_getLast(long jarg1, StringList jarg1_);
  public final static native void StringList_removeFirst(long jarg1, StringList jarg1_);
  public final static native void StringList_removeLast(long jarg1, StringList jarg1_);
  public final static native long StringList_iterator(long jarg1, StringList jarg1_);
  public final static native void delete_StringList(long jarg1);
  public final static native long new_StringListIterator(long jarg1, StringList jarg1_);
  public final static native boolean StringListIterator_hasNext(long jarg1, StringListIterator jarg1_);
  public final static native String StringListIterator_nextImpl(long jarg1, StringListIterator jarg1_);
  public final static native void delete_StringListIterator(long jarg1);
  public final static native long new_StringMap__SWIG_0();
  public final static native long new_StringMap__SWIG_1(long jarg1, StringMap jarg1_);
  public final static native long StringMap_size(long jarg1, StringMap jarg1_);
  public final static native boolean StringMap_empty(long jarg1, StringMap jarg1_);
  public final static native void StringMap_clear(long jarg1, StringMap jarg1_);
  public final static native String StringMap_get(long jarg1, StringMap jarg1_, String jarg2);
  public final static native void StringMap_set(long jarg1, StringMap jarg1_, String jarg2, String jarg3);
  public final static native void StringMap_del(long jarg1, StringMap jarg1_, String jarg2);
  public final static native boolean StringMap_has_key(long jarg1, StringMap jarg1_, String jarg2);
  public final static native void delete_StringMap(long jarg1);
  public final static native long new_ServiceAddresses__SWIG_0(String jarg1);
  public final static native long new_ServiceAddresses__SWIG_1(long jarg1, StringVector jarg1_);
  public final static native void delete_ServiceAddresses(long jarg1);
  public final static native long new_OptionsProxy();
  public final static native void delete_OptionsProxy(long jarg1);
  public final static native void OptionsProxy_version_string_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_version_string_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_xtreemfs_url_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_xtreemfs_url_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_service_addresses_set(long jarg1, OptionsProxy jarg1_, long jarg2, ServiceAddresses jarg2_);
  public final static native long OptionsProxy_service_addresses_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_volume_name_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_volume_name_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_protocol_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_protocol_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_mount_point_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_mount_point_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_log_level_string_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_log_level_string_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_log_file_path_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_log_file_path_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_show_help_set(long jarg1, OptionsProxy jarg1_, boolean jarg2);
  public final static native boolean OptionsProxy_show_help_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_empty_arguments_list_set(long jarg1, OptionsProxy jarg1_, boolean jarg2);
  public final static native boolean OptionsProxy_empty_arguments_list_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_show_version_set(long jarg1, OptionsProxy jarg1_, boolean jarg2);
  public final static native boolean OptionsProxy_show_version_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_metadata_cache_size_set(long jarg1, OptionsProxy jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger OptionsProxy_metadata_cache_size_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_metadata_cache_ttl_s_set(long jarg1, OptionsProxy jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger OptionsProxy_metadata_cache_ttl_s_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_enable_async_writes_set(long jarg1, OptionsProxy jarg1_, boolean jarg2);
  public final static native boolean OptionsProxy_enable_async_writes_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_async_writes_max_requests_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_async_writes_max_requests_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_async_writes_max_request_size_kb_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_async_writes_max_request_size_kb_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_readdir_chunk_size_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_readdir_chunk_size_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_enable_atime_set(long jarg1, OptionsProxy jarg1_, boolean jarg2);
  public final static native boolean OptionsProxy_enable_atime_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_max_tries_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_max_tries_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_max_read_tries_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_max_read_tries_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_max_write_tries_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_max_write_tries_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_max_view_renewals_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_max_view_renewals_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_retry_delay_s_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_retry_delay_s_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_connect_timeout_s_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_connect_timeout_s_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_request_timeout_s_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_request_timeout_s_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_linger_timeout_s_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_linger_timeout_s_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_ssl_pem_cert_path_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_ssl_pem_cert_path_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_ssl_pem_key_path_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_ssl_pem_key_path_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_ssl_pem_key_pass_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_ssl_pem_key_pass_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_ssl_pem_trusted_certs_path_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_ssl_pem_trusted_certs_path_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_ssl_pkcs12_path_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_ssl_pkcs12_path_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_ssl_pkcs12_pass_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_ssl_pkcs12_pass_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_grid_ssl_set(long jarg1, OptionsProxy jarg1_, boolean jarg2);
  public final static native boolean OptionsProxy_grid_ssl_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_ssl_verify_certificates_set(long jarg1, OptionsProxy jarg1_, boolean jarg2);
  public final static native boolean OptionsProxy_ssl_verify_certificates_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_ssl_ignore_verify_errors_set(long jarg1, OptionsProxy jarg1_, long jarg2, IntVector jarg2_);
  public final static native long OptionsProxy_ssl_ignore_verify_errors_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_ssl_method_string_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_ssl_method_string_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_grid_auth_mode_globus_set(long jarg1, OptionsProxy jarg1_, boolean jarg2);
  public final static native boolean OptionsProxy_grid_auth_mode_globus_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_grid_auth_mode_unicore_set(long jarg1, OptionsProxy jarg1_, boolean jarg2);
  public final static native boolean OptionsProxy_grid_auth_mode_unicore_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_grid_gridmap_location_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_grid_gridmap_location_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_grid_gridmap_location_default_globus_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_grid_gridmap_location_default_globus_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_grid_gridmap_location_default_unicore_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_grid_gridmap_location_default_unicore_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_grid_gridmap_reload_interval_m_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_grid_gridmap_reload_interval_m_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_vivaldi_enable_set(long jarg1, OptionsProxy jarg1_, boolean jarg2);
  public final static native boolean OptionsProxy_vivaldi_enable_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_vivaldi_enable_dir_updates_set(long jarg1, OptionsProxy jarg1_, boolean jarg2);
  public final static native boolean OptionsProxy_vivaldi_enable_dir_updates_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_vivaldi_filename_set(long jarg1, OptionsProxy jarg1_, String jarg2);
  public final static native String OptionsProxy_vivaldi_filename_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_vivaldi_recalculation_interval_s_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_vivaldi_recalculation_interval_s_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_vivaldi_recalculation_epsilon_s_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_vivaldi_recalculation_epsilon_s_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_vivaldi_max_iterations_before_updating_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_vivaldi_max_iterations_before_updating_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_vivaldi_max_request_retries_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_vivaldi_max_request_retries_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_periodic_file_size_updates_interval_s_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_periodic_file_size_updates_interval_s_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_periodic_xcap_renewal_interval_s_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_periodic_xcap_renewal_interval_s_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_vivaldi_zipf_generator_skew_set(long jarg1, OptionsProxy jarg1_, double jarg2);
  public final static native double OptionsProxy_vivaldi_zipf_generator_skew_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_xLoc_install_poll_interval_s_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_xLoc_install_poll_interval_s_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_alternative_options_list_set(long jarg1, OptionsProxy jarg1_, long jarg2, StringVector jarg2_);
  public final static native long OptionsProxy_alternative_options_list_get(long jarg1, OptionsProxy jarg1_);
  public final static native void OptionsProxy_additional_user_mapping_type_set(long jarg1, OptionsProxy jarg1_, int jarg2);
  public final static native int OptionsProxy_additional_user_mapping_type_get(long jarg1, OptionsProxy jarg1_);
  public final static native long new_SSLOptionsProxy(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6, int jarg7, boolean jarg8, boolean jarg9, long jarg10, IntVector jarg10_, String jarg11);
  public final static native void delete_SSLOptionsProxy(long jarg1);
  public final static native String SSLOptionsProxy_pem_file_name(long jarg1, SSLOptionsProxy jarg1_);
  public final static native String SSLOptionsProxy_pem_cert_name(long jarg1, SSLOptionsProxy jarg1_);
  public final static native String SSLOptionsProxy_pem_file_password(long jarg1, SSLOptionsProxy jarg1_);
  public final static native String SSLOptionsProxy_pem_trusted_certs_file_name(long jarg1, SSLOptionsProxy jarg1_);
  public final static native String SSLOptionsProxy_pkcs12_file_name(long jarg1, SSLOptionsProxy jarg1_);
  public final static native String SSLOptionsProxy_pkcs12_file_password(long jarg1, SSLOptionsProxy jarg1_);
  public final static native int SSLOptionsProxy_cert_format(long jarg1, SSLOptionsProxy jarg1_);
  public final static native boolean SSLOptionsProxy_use_grid_ssl(long jarg1, SSLOptionsProxy jarg1_);
  public final static native boolean SSLOptionsProxy_verify_certificates(long jarg1, SSLOptionsProxy jarg1_);
  public final static native boolean SSLOptionsProxy_ignore_verify_error(long jarg1, SSLOptionsProxy jarg1_, int jarg2);
  public final static native String SSLOptionsProxy_ssl_method_string(long jarg1, SSLOptionsProxy jarg1_);
  public final static native void initialize_logger__SWIG_3(int jarg1);
  public final static native void delete_UUIDResolverProxy(long jarg1);
  public final static native void UUIDResolverProxy_uUIDToAddress(long jarg1, UUIDResolverProxy jarg1_, String jarg2, String[] jarg3) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void UUIDResolverProxy_volumeNameToMRCUUID(long jarg1, UUIDResolverProxy jarg1_, String jarg2, String[] jarg3) throws org.xtreemfs.common.libxtreemfs.exceptions.VolumeNotFoundException, org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native long UUIDResolverProxy_volumeNameToMRCUUIDs(long jarg1, UUIDResolverProxy jarg1_, String jarg2) throws org.xtreemfs.common.libxtreemfs.exceptions.VolumeNotFoundException, org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native long ClientProxy_createClient__SWIG_0(long jarg1, ServiceAddresses jarg1_, byte[] jarg2, long jarg3, SSLOptionsProxy jarg3_, long jarg4, OptionsProxy jarg4_);
  public final static native long ClientProxy_createClient__SWIG_1(long jarg1, ServiceAddresses jarg1_, byte[] jarg2, long jarg3, SSLOptionsProxy jarg3_, long jarg4, OptionsProxy jarg4_, int jarg5);
  public final static native void delete_ClientProxy(long jarg1);
  public final static native void ClientProxy_start(long jarg1, ClientProxy jarg1_) throws org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void ClientProxy_shutdown(long jarg1, ClientProxy jarg1_);
  public final static native long ClientProxy_openVolumeProxy(long jarg1, ClientProxy jarg1_, String jarg2, long jarg3, SSLOptionsProxy jarg3_, long jarg4, OptionsProxy jarg4_) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException, org.xtreemfs.common.libxtreemfs.exceptions.VolumeNotFoundException;
  public final static native void ClientProxy_createVolume__SWIG_0(long jarg1, ClientProxy jarg1_, long jarg2, ServiceAddresses jarg2_, byte[] jarg3, byte[] jarg4, String jarg5) throws java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void ClientProxy_createVolume__SWIG_1(long jarg1, ClientProxy jarg1_, long jarg2, ServiceAddresses jarg2_, byte[] jarg3, byte[] jarg4, String jarg5, int jarg6, String jarg7, String jarg8, int jarg9, int jarg10, int jarg11, int jarg12, int jarg13, long jarg14, StringMap jarg14_) throws java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void ClientProxy_createVolume__SWIG_2(long jarg1, ClientProxy jarg1_, byte[] jarg2, byte[] jarg3, String jarg4, int jarg5, String jarg6, String jarg7, int jarg8, int jarg9, int jarg10, int jarg11, int jarg12, long jarg13, StringMap jarg13_) throws java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void ClientProxy_deleteVolume__SWIG_0(long jarg1, ClientProxy jarg1_, long jarg2, ServiceAddresses jarg2_, byte[] jarg3, byte[] jarg4, String jarg5) throws java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void ClientProxy_deleteVolume__SWIG_1(long jarg1, ClientProxy jarg1_, byte[] jarg2, byte[] jarg3, String jarg4) throws java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native byte[] ClientProxy_listVolumes(long jarg1, ClientProxy jarg1_, long jarg2, ServiceAddresses jarg2_, byte[] jarg3) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native long ClientProxy_listVolumeNames(long jarg1, ClientProxy jarg1_) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native String ClientProxy_uUIDToAddress(long jarg1, ClientProxy jarg1_, String jarg2) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native long ClientProxy_getUUIDResolver(long jarg1, ClientProxy jarg1_);
  public final static native void delete_VolumeProxy(long jarg1);
  public final static native void VolumeProxy_close(long jarg1, VolumeProxy jarg1_);
  public final static native byte[] VolumeProxy_statFS(long jarg1, VolumeProxy jarg1_, byte[] jarg2) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_readLink(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, String[] jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_symlink(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, String jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_link(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, String jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_access(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, int jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native long VolumeProxy_openFileProxy__SWIG_0(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, int jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native long VolumeProxy_openFileProxy__SWIG_1(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, int jarg4, long jarg5) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native long VolumeProxy_openFileProxy__SWIG_2(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, int jarg4, long jarg5, long jarg6) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_truncate(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, int jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native byte[] VolumeProxy_getAttr__SWIG_0(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native byte[] VolumeProxy_getAttr__SWIG_1(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, boolean jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_setAttr(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, byte[] jarg4, int jarg5) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_unlink(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_rename(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, String jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_makeDirectory(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, long jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_deleteDirectory(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native byte[] VolumeProxy_readDir(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, long jarg4, long jarg5, boolean jarg6) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native byte[] VolumeProxy_listXAttrs__SWIG_0(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native byte[] VolumeProxy_listXAttrs__SWIG_1(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, boolean jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_setXAttr(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, String jarg4, String jarg5, int jarg6) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native boolean VolumeProxy_getXAttr(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, String jarg4, String[] jarg5) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native boolean VolumeProxy_getXAttrSize(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, String jarg4, int[] jarg5) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_removeXAttr(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, String jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_addReplica(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, byte[] jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native byte[] VolumeProxy_listReplicas(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_removeReplica(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, String jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_getSuitableOSDs(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, int jarg4, long jarg5, StringList jarg5_) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void VolumeProxy_setReplicaUpdatePolicy(long jarg1, VolumeProxy jarg1_, byte[] jarg2, String jarg3, String jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void delete_FileHandleProxy(long jarg1);
  public final static native int FileHandleProxy_read__SWIG_0(long jarg1, FileHandleProxy jarg1_, byte[] jarg2, int jarg3, long jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native int FileHandleProxy_write__SWIG_0(long jarg1, FileHandleProxy jarg1_, byte[] jarg2, int jarg3, long jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void FileHandleProxy_flush(long jarg1, FileHandleProxy jarg1_) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void FileHandleProxy_truncate(long jarg1, FileHandleProxy jarg1_, byte[] jarg2, long jarg3) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native byte[] FileHandleProxy_getAttr(long jarg1, FileHandleProxy jarg1_, byte[] jarg2) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native byte[] FileHandleProxy_acquireLock(long jarg1, FileHandleProxy jarg1_, int jarg2, long jarg3, long jarg4, boolean jarg5, boolean jarg6) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native byte[] FileHandleProxy_checkLock(long jarg1, FileHandleProxy jarg1_, int jarg2, long jarg3, long jarg4, boolean jarg5) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void FileHandleProxy_releaseLock__SWIG_0(long jarg1, FileHandleProxy jarg1_, int jarg2, long jarg3, long jarg4, boolean jarg5) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void FileHandleProxy_releaseLock__SWIG_1(long jarg1, FileHandleProxy jarg1_, byte[] jarg2) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void FileHandleProxy_releaseLockOfProcess(long jarg1, FileHandleProxy jarg1_, int jarg2) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native void FileHandleProxy_pingReplica(long jarg1, FileHandleProxy jarg1_, String jarg2) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException, org.xtreemfs.common.libxtreemfs.exceptions.UUIDNotInXlocSetException;
  public final static native void FileHandleProxy_close(long jarg1, FileHandleProxy jarg1_) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException;
  public final static native int FileHandleProxy_readDirect(long jarg1, FileHandleProxy jarg1_, java.nio.ByteBuffer jarg2, int jarg3, long jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native int FileHandleProxy_writeDirect(long jarg1, FileHandleProxy jarg1_, java.nio.ByteBuffer jarg2, int jarg3, long jarg4) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native int FileHandleProxy_read__SWIG_1(long jarg1, FileHandleProxy jarg1_, byte[] jarg2, int jarg3, int jarg4, long jarg5) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
  public final static native int FileHandleProxy_write__SWIG_1(long jarg1, FileHandleProxy jarg1_, byte[] jarg2, int jarg3, int jarg4, long jarg5) throws org.xtreemfs.common.libxtreemfs.exceptions.AddressToUUIDNotFoundException, java.io.IOException, org.xtreemfs.common.libxtreemfs.exceptions.PosixErrorException, org.xtreemfs.common.libxtreemfs.exceptions.XtreemFSException;
}
